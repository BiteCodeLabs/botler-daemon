plugins {
    id 'fabric-loom' version '1.0.1'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

version = project.mod_version
group = project.maven_group

configurations {
    // Determines shaded dependencies
    shade
    developmentElements {
        extendsFrom(implementation, namedElements)
    }
}

dependencies {

    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // External Dependencies
    shade(implementation 'io.socket:socket.io-client:2.1.0')
    shade(implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2')
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

shadowJar {
    // Only shade dependencies not provided by Minecraft/FAPI/FLoader
    configurations = [project.configurations.shade]

    //Exclude META-INF entries of shaded deps
    exclude('META-INF/**', '**/*.pdn','**/*.bbmodel')

    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }

    destinationDirectory = file("${buildDir}/tmp/allJar")
}

prepareRemapJar {
    dependsOn shadowJar
}

remapJar {
    input = shadowJar.archiveFile
}

repositories {
    mavenCentral()
}